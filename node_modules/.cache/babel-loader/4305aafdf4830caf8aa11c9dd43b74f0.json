{"ast":null,"code":"var _jsxFileName = \"/Users/Reshma/Documents/foxbrains-assignment/foxbrains/src/components/PasswordConditions/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DotIcon from \"@material-ui/icons/FiberManualRecordSharp\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  passwordErrorClass: {\n    \"& .MuiListItem-gutters\": {\n      padding: \"0px\"\n    },\n    \"& .MuiListItemIcon-root\": {\n      color: \"#586877\",\n      minWidth: \"20px\",\n      \"& .MuiSvgIcon-root\": {\n        color: \"#586877\",\n        fontSize: \"x-small\"\n      }\n    },\n    \"& .MuiListItemText-root\": {\n      color: \"#586877\",\n      fontSize: \"16px\"\n    }\n  },\n  passwordSuccessClass: {\n    \"& .MuiListItem-gutters\": {\n      padding: \"0px\"\n    },\n    \"& .MuiListItemIcon-root \": {\n      color: \"#02BF86\",\n      minWidth: \"20px\",\n      \"& .MuiSvgIcon-root\": {\n        color: \"#02BF86\",\n        fontSize: \"medium\"\n      }\n    },\n    \"& .MuiListItemText-root\": {\n      color: \"#02BF86\",\n      fontSize: \"16px\"\n    }\n  }\n}));\n\nfunction PasswordConditions(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    conditions\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.passwordErrorClass,\n      children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Passwords should have:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: conditions && conditions.passwordCondition1 ? classes.passwordSuccessClass : classes.passwordErrorClass,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: conditions && conditions.passwordCondition1 ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(DotIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Atleast 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: conditions && conditions.passwordCondition2 ? classes.passwordSuccessClass : classes.passwordErrorClass,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: conditions && conditions.passwordCondition2 ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(DotIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Digits (0-9), Upper Case (A-Z) and Lower Case (a-z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n        className: conditions && conditions.passwordCondition3 ? classes.passwordSuccessClass : classes.passwordErrorClass,\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          children: conditions && conditions.passwordCondition3 ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(DotIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: \"Atleast one special character (*, &,!...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PasswordConditions, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PasswordConditions;\nexport default PasswordConditions;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordConditions\");","map":{"version":3,"sources":["/Users/Reshma/Documents/foxbrains-assignment/foxbrains/src/components/PasswordConditions/index.js"],"names":["React","makeStyles","List","ListItem","ListItemIcon","CheckIcon","DotIcon","ListItemText","useStyles","theme","passwordErrorClass","padding","color","minWidth","fontSize","passwordSuccessClass","PasswordConditions","props","classes","conditions","passwordCondition1","passwordCondition2","passwordCondition3"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport DotIcon from \"@material-ui/icons/FiberManualRecordSharp\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles((theme) => ({\n  passwordErrorClass: {\n    \"& .MuiListItem-gutters\": {\n      padding: \"0px\",\n    },\n    \"& .MuiListItemIcon-root\": {\n      color: \"#586877\",\n      minWidth: \"20px\",\n      \"& .MuiSvgIcon-root\": {\n        color: \"#586877\",\n        fontSize: \"x-small\",\n      },\n    },\n    \"& .MuiListItemText-root\": {\n      color: \"#586877\",\n      fontSize: \"16px\",\n    },\n  },\n  passwordSuccessClass: {\n    \"& .MuiListItem-gutters\": {\n      padding: \"0px\",\n    },\n    \"& .MuiListItemIcon-root \": {\n      color: \"#02BF86\",\n      minWidth: \"20px\",\n      \"& .MuiSvgIcon-root\": {\n        color: \"#02BF86\",\n        fontSize: \"medium\",\n      },\n    },\n    \"& .MuiListItemText-root\": {\n      color: \"#02BF86\",\n      fontSize: \"16px\",\n    },\n  },\n}));\n\nfunction PasswordConditions(props) {\n  const classes = useStyles();\n  const { conditions } = props;\n  return (\n    <div>\n      <List className={classes.passwordErrorClass}>\n        <ListItemText primary=\"Passwords should have:\" />\n\n        <ListItem\n          className={\n            conditions && conditions.passwordCondition1\n              ? classes.passwordSuccessClass\n              : classes.passwordErrorClass\n          }\n        >\n          <ListItemIcon>\n            {conditions && conditions.passwordCondition1 ? (\n              <CheckIcon />\n            ) : (\n              <DotIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText primary=\"Atleast 8 characters\" />\n        </ListItem>\n\n        <ListItem\n          className={\n            conditions && conditions.passwordCondition2\n              ? classes.passwordSuccessClass\n              : classes.passwordErrorClass\n          }\n        >\n          <ListItemIcon>\n            {conditions && conditions.passwordCondition2 ? (\n              <CheckIcon />\n            ) : (\n              <DotIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText primary=\"Digits (0-9), Upper Case (A-Z) and Lower Case (a-z)\" />\n        </ListItem>\n\n        <ListItem\n          className={\n            conditions && conditions.passwordCondition3\n              ? classes.passwordSuccessClass\n              : classes.passwordErrorClass\n          }\n        >\n          <ListItemIcon>\n            {conditions && conditions.passwordCondition3 ? (\n              <CheckIcon />\n            ) : (\n              <DotIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText primary=\"Atleast one special character (*, &,!...)\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n\nexport default PasswordConditions;\n"]},"metadata":{},"sourceType":"module"}